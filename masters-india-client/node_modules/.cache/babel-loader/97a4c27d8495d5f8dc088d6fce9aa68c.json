{"ast":null,"code":"var _jsxFileName = \"D:\\\\sleepyCoder\\\\masters-india-assessment\\\\masters-india-client\\\\src\\\\SnippetsList.js\",\n    _s = $RefreshSig$();\n\nimport { HeartTwoTone, HeartOutlined, CopyOutlined } from '@ant-design/icons';\nimport { Button, List, Skeleton, Tooltip, message } from 'antd';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport axios from 'axios';\nimport { Select } from 'antd';\nimport baseUrl from \"./baseUrl\";\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst SnippetsList = () => {\n  _s();\n\n  const [initLoading, setInitLoading] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [list, setList] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [count, setCount] = useState(0);\n  const [currentTags, setCurrentTags] = useState([]);\n  const didMount = useRef(false);\n\n  const getSnippets = function () {\n    let tags = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let loadMore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    axios.get(baseUrl + `/getSnippets`, {\n      params: {\n        tags: tags,\n        count: count\n      }\n    }).then(res => {\n      console.log(res);\n      setInitLoading(false);\n      setLoading(false);\n      setList([...list, ...res.data.results]);\n    });\n  };\n\n  const getTags = () => {\n    axios.get(baseUrl + `/getTags`).then(res => {\n      setTags(res.data.results);\n    });\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    } else {\n      if (!didMount.current) {\n        getTags();\n      } else {\n        getSnippets(currentTags);\n      }\n\n      didMount.current = true;\n    }\n  }, [count, currentTags]);\n\n  const onLoadMore = () => {\n    setLoading(true);\n    setCount(count + 1);\n  };\n\n  const markAsFav = () => {// call api to mark as favourite\n  };\n\n  const handleTags = value => {\n    setLoading(true);\n    setCurrentTags(value);\n    setList([]);\n    setCount(0);\n  };\n\n  const copiedToClipboard = () => {\n    message.success('Copied to clipboard', 1);\n  };\n\n  const loadMore = !initLoading && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: 12,\n      height: 32,\n      lineHeight: '32px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => onLoadMore(),\n      children: \"loading more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      mode: \"tags\",\n      style: {\n        width: '80%'\n      },\n      onChange: handleTags,\n      tokenSeparators: [','],\n      children: tags.map(tag => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          children: tag.tag\n        }, tag.tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: \"demo-loadmore-list\",\n      style: {\n        padding: 20,\n        width: \"50%\",\n        textAlign: 'justify',\n        marginLeft: \"25%\"\n      },\n      loading: initLoading,\n      itemLayout: \"horizontal\",\n      loadMore: loadMore,\n      dataSource: list,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        actions: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Mark as favourite\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            shape: \"circle\",\n            icon: item.fav ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n              twoToneColor: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 88\n            }, this),\n            onClick: markAsFav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Copy to Clipboard\",\n          children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: item.snippet,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 43\n              }, this),\n              onClick: copiedToClipboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          avatar: true,\n          title: false,\n          loading: item.loading,\n          active: true,\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            // title={<a href=\"https://ant.design\">{item.name?.last}</a>}\n            description: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: item.snippet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SnippetsList, \"8fLC3M3b2qTXgNNE9Vb6LgGQ8yM=\");\n\n_c = SnippetsList;\nexport default SnippetsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnippetsList\");","map":{"version":3,"names":["HeartTwoTone","HeartOutlined","CopyOutlined","Button","List","Skeleton","Tooltip","message","React","useEffect","useState","useRef","CopyToClipboard","axios","Select","baseUrl","jwt","Option","SnippetsList","initLoading","setInitLoading","loading","setLoading","list","setList","tags","setTags","count","setCount","currentTags","setCurrentTags","didMount","getSnippets","loadMore","get","params","then","res","console","log","data","results","getTags","token","localStorage","getItem","user","decode","removeItem","window","location","href","current","onLoadMore","markAsFav","handleTags","value","copiedToClipboard","success","textAlign","marginTop","height","lineHeight","width","map","tag","padding","marginLeft","item","fav","snippet"],"sources":["D:/sleepyCoder/masters-india-assessment/masters-india-client/src/SnippetsList.js"],"sourcesContent":["import { HeartTwoTone, HeartOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport { Button, List, Skeleton, Tooltip, message } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport axios from 'axios';\r\nimport { Select } from 'antd';\r\nimport baseUrl from \"./baseUrl\";\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst { Option } = Select;\r\n\r\nconst SnippetsList = () => {\r\n\r\n    const [initLoading, setInitLoading] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n    const [list, setList] = useState([]);\r\n    const [tags, setTags] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n    const [currentTags, setCurrentTags] = useState([])\r\n    const didMount = useRef(false)\r\n\r\n    const getSnippets = (tags = [], loadMore = false) => {\r\n        axios.get(baseUrl + `/getSnippets`, {\r\n            params: {\r\n                tags: tags,\r\n                count: count\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setInitLoading(false);\r\n                setLoading(false);\r\n                setList([...list, ...res.data.results]);\r\n            });\r\n    }\r\n\r\n    const getTags = () => {\r\n        axios.get(baseUrl + `/getTags`)\r\n            .then((res) => {\r\n                setTags(res.data.results);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const token = localStorage.getItem('token')\r\n\r\n        if (token) {\r\n            const user = jwt.decode(token)\r\n            if (!user) {\r\n                localStorage.removeItem('token')\r\n                window.location.href = '/login'\r\n            }\r\n        } else {\r\n            if (!didMount.current) {\r\n                getTags();\r\n            } else {\r\n                getSnippets(currentTags);\r\n            }\r\n            didMount.current = true;\r\n        }\r\n\r\n    }, [count, currentTags]);\r\n\r\n\r\n    const onLoadMore = () => {\r\n        setLoading(true);\r\n        setCount(count + 1);\r\n    };\r\n\r\n    const markAsFav = () => {\r\n\r\n        // call api to mark as favourite\r\n\r\n    }\r\n\r\n    const handleTags = (value) => {\r\n        setLoading(true);\r\n        setCurrentTags(value);\r\n        setList([]);\r\n        setCount(0);\r\n    }\r\n\r\n    const copiedToClipboard = () => {\r\n        message.success('Copied to clipboard', 1);\r\n    };\r\n\r\n    const loadMore =\r\n        !initLoading && !loading ? (\r\n            <div\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginTop: 12,\r\n                    height: 32,\r\n                    lineHeight: '32px',\r\n                }}\r\n            >\r\n                <Button onClick={() => onLoadMore()}>loading more</Button>\r\n            </div>\r\n        ) : null;\r\n    return (\r\n        <>\r\n\r\n            <Select\r\n                mode=\"tags\"\r\n                style={{\r\n                    width: '80%',\r\n                }}\r\n                onChange={handleTags}\r\n                tokenSeparators={[',']}\r\n            >\r\n                {\r\n                    tags.map((tag) => {\r\n                        return <Option key={tag.tag}>{tag.tag}</Option>\r\n                    })\r\n                }\r\n            </Select>\r\n            <List\r\n                className=\"demo-loadmore-list\"\r\n                style={{\r\n                    padding: 20,\r\n                    width: \"50%\",\r\n                    textAlign: 'justify',\r\n                    marginLeft: \"25%\"\r\n                }}\r\n                loading={initLoading}\r\n                itemLayout=\"horizontal\"\r\n                loadMore={loadMore}\r\n                dataSource={list}\r\n                renderItem={(item) => (\r\n                    <List.Item\r\n                        actions={[<Tooltip title=\"Mark as favourite\">\r\n                            <Button\r\n                                shape='circle'\r\n                                icon={item.fav ? <HeartTwoTone twoToneColor='red' /> : <HeartOutlined />}\r\n                                onClick={markAsFav}\r\n                            />\r\n                        </Tooltip>,\r\n                        <Tooltip title=\"Copy to Clipboard\">\r\n                            <CopyToClipboard text={item.snippet}>\r\n                                <Button\r\n                                    shape='circle'\r\n                                    icon={<CopyOutlined />}\r\n                                    onClick={copiedToClipboard}\r\n                                />\r\n                            </CopyToClipboard>\r\n                        </Tooltip>]\r\n                        }\r\n                    >\r\n                        <Skeleton avatar title={false} loading={item.loading} active>\r\n                            <List.Item.Meta\r\n                                // title={<a href=\"https://ant.design\">{item.name?.last}</a>}\r\n                                description={<pre>{item.snippet}</pre>}\r\n                            />\r\n                        </Skeleton>\r\n                    </List.Item >\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SnippetsList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}